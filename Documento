2. Título + subtítulo explicativo.
Título: DataChat
Subtítulo explicativo: Tu base de datos, ahora conversa contigo. Pregunta en lenguaje natural y obtén información al instante.

3. Naturaleza del proyecto (personal o encargo profesional) y Área de desarrollo a la que se adscribe.
Naturaleza del proyecto: Este proyecto es de desarrollo personal.
Área de desarrollo: El proyecto se adscribe al área de Inteligencia Artificial y Desarrollo de Software, con un enfoque en el procesamiento de lenguaje natural (PLN) aplicado a bases de datos y la creación de interfaces de usuario interactivas.

4. Definición.
Este proyecto tiene como objetivo desarrollar un SQLChatBot, un asistente virtual que permite a los usuarios realizar consultas a una base de datos utilizando lenguaje natural. El usuario podrá hacer preguntas como "¿Cuántos productos hay en stock?" o "¿Cuáles son los empleados más antiguos?", y el bot traducirá esas preguntas en consultas SQL y ejecutará las consultas sobre la base de datos que el usuario elija. El proyecto se desarrollará utilizando tecnologías de procesamiento de lenguaje natural (PLN) y herramientas para la creación de interfaces conversacionales, como Python y NLTK. La finalidad del proyecto es facilitar la interacción con bases de datos de manera más intuitiva y accesible, permitiendo a usuarios sin conocimientos de SQL obtener respuestas rápidas a partir de consultas complejas.

5. Selección 1-2 antecedentes + conclusiones.
Antecedentes:

Chatbots para la interacción con bases de datos (Ejemplo: "SQLBot"): Varios proyectos han explorado la creación de chatbots que permiten la consulta de bases de datos a través de lenguaje natural. Estos bots, aunque funcionales, a menudo dependen de comandos predefinidos y tienen un alcance limitado. Conclusión: El desafío está en mejorar la capacidad del bot para comprender una mayor variedad de preguntas y poder ejecutarlas en diferentes sistemas de bases de datos.

Procesamiento de lenguaje natural para SQL (Ejemplo: "Text-to-SQL"): Existen investigaciones en PLN que permiten convertir preguntas en lenguaje natural a sentencias SQL. Sin embargo, los sistemas aún presentan desafíos en cuanto a la precisión y comprensión semántica, especialmente con preguntas complejas. Conclusión: Se debe avanzar en la interpretación semántica y la gestión de diferentes dialectos de SQL para hacer el sistema más robusto y eficiente.

6. Selección 1-2 referentes + conclusiones.
Referentes:

GPT-3 y GPT-4 para generación de texto en lenguaje natural: Los modelos de OpenAI, como GPT-3, han demostrado una capacidad impresionante para generar y comprender texto en lenguaje natural, y son utilizados en múltiples aplicaciones de chatbots. Conclusión: Utilizar un modelo de lenguaje avanzado como GPT-4 será clave para la precisión y flexibilidad del SQLChatBot en la interpretación de preguntas y la generación de consultas.

Text-to-SQL frameworks (como Text2SQL): Esta es una técnica que permite traducir preguntas de lenguaje natural a consultas SQL. Un referente sería el proyecto Text2SQL que emplea redes neuronales para realizar esta tarea. Conclusión: Inspirarse en estos frameworks ayudará a mejorar la parte técnica del proyecto, asegurando una mejor traducción de las preguntas al SQL adecuado.

7. Aspectos técnicos.
Lenguaje de programación: Python (por su robustez en procesamiento de texto y manejo de bases de datos).
Librerías/Frameworks:
Natural Language Toolkit (NLTK) o spaCy para el procesamiento de lenguaje natural.
SQLAlchemy o pyodbc para la interacción con bases de datos.
Transformers de Hugging Face (si se utiliza GPT-3/4) para aprovechar modelos preentrenados en PLN.
Base de datos: El proyecto será compatible con bases de datos SQL como MySQL, PostgreSQL y SQLite.
Interfaz de usuario: Se desarrollará una interfaz de línea de comandos o una interfaz web básica utilizando Flask para interactuar con el usuario.

8. Temporalización (Diagrama de Gantt).
Semana 1-2: Investigación y análisis de requisitos.
Semana 3-4: Desarrollo de la infraestructura básica (conexión a bases de datos, configuración del entorno).
Semana 5-7: Implementación del procesamiento de lenguaje natural (entrenamiento de modelos, pruebas).
Semana 8-9: Integración del sistema de generación de consultas SQL a partir de lenguaje natural.
Semana 10-11: Desarrollo de la interfaz de usuario.
Semana 12: Pruebas y ajuste final del sistema.
Semana 13: Preparación de documentación y presentación final.

9. Viabilidad presupuestaria.
Nº de sesiones de trabajo: Aproximadamente 12 semanas con trabajo diario.
Costes estimados:
API deGroq: Coste gratuito.
Teniendo en cuenta lo que cobra un desarrollador que acaba de empezar, unos 300€ por semana.
Lo que seria un total de 3600€.
Equipos y herramientas: Los costos se calcularán en función del tiempo de uso y la vida útil del hardware y software necesario.
