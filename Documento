2. Título + subtítulo explicativo.
Título: DataChat
Subtítulo explicativo: Tu base de datos, ahora conversa contigo. Pregunta en lenguaje natural y obtén información al instante.

3. Naturaleza del proyecto (personal o encargo profesional) y Área de desarrollo a la que se adscribe.
Naturaleza del proyecto: Este proyecto es de desarrollo personal.
Área de desarrollo: El proyecto se adscribe al área de Inteligencia Artificial y Desarrollo de Software, con un enfoque en el procesamiento de lenguaje natural (PLN) aplicado a bases de datos y la creación de interfaces de usuario interactivas.

4. Definición.
Este proyecto tiene como objetivo desarrollar un SQLChatBot, un asistente virtual que permite a los usuarios realizar consultas a una base de datos utilizando lenguaje natural. El usuario podrá hacer preguntas como "¿Cuántos productos hay en stock?" o "¿Cuáles son los empleados más antiguos?", y el bot traducirá esas preguntas en consultas SQL y ejecutará las consultas sobre la base de datos que el usuario elija. El proyecto se desarrollará utilizando tecnologías de procesamiento de lenguaje natural (PLN) y herramientas para la creación de interfaces conversacionales, como Python y NLTK. La finalidad del proyecto es facilitar la interacción con bases de datos de manera más intuitiva y accesible, permitiendo a usuarios sin conocimientos de SQL obtener respuestas rápidas a partir de consultas complejas.

5. Selección 1-2 antecedentes + conclusiones.
Antecedentes:

Chatbots para la interacción con bases de datos (Ejemplo: "SQLBot"): Varios proyectos han explorado la creación de chatbots que permiten la consulta de bases de datos a través de lenguaje natural. Estos bots, aunque funcionales, a menudo dependen de comandos predefinidos y tienen un alcance limitado. Conclusión: El desafío está en mejorar la capacidad del bot para comprender una mayor variedad de preguntas y poder ejecutarlas en diferentes sistemas de bases de datos.

Procesamiento de lenguaje natural para SQL (Ejemplo: "Text-to-SQL"): Existen investigaciones en PLN que permiten convertir preguntas en lenguaje natural a sentencias SQL. Sin embargo, los sistemas aún presentan desafíos en cuanto a la precisión y comprensión semántica, especialmente con preguntas complejas. Conclusión: Se debe avanzar en la interpretación semántica y la gestión de diferentes dialectos de SQL para hacer el sistema más robusto y eficiente.

6. Selección 1-2 referentes + conclusiones.
Referentes:

GPT-3 y GPT-4 para generación de texto en lenguaje natural: Los modelos de OpenAI, como GPT-3, han demostrado una capacidad impresionante para generar y comprender texto en lenguaje natural, y son utilizados en múltiples aplicaciones de chatbots. Conclusión: Utilizar un modelo de lenguaje avanzado como GPT-4 será clave para la precisión y flexibilidad del SQLChatBot en la interpretación de preguntas y la generación de consultas.

Text-to-SQL frameworks (como Text2SQL): Esta es una técnica que permite traducir preguntas de lenguaje natural a consultas SQL. Un referente sería el proyecto Text2SQL que emplea redes neuronales para realizar esta tarea. Conclusión: Inspirarse en estos frameworks ayudará a mejorar la parte técnica del proyecto, asegurando una mejor traducción de las preguntas al SQL adecuado.

7. Aspectos técnicos.
Lenguaje de programación: Python (por su robustez en procesamiento de texto y manejo de bases de datos).
Librerías/Frameworks:
Natural Language Toolkit (NLTK) o spaCy para el procesamiento de lenguaje natural.
SQLAlchemy o pyodbc para la interacción con bases de datos.
Transformers de Hugging Face (si se utiliza GPT-3/4) para aprovechar modelos preentrenados en PLN.
Base de datos: El proyecto será compatible con bases de datos SQL como MySQL, PostgreSQL y SQLite.
Interfaz de usuario: Se desarrollará una interfaz de línea de comandos o una interfaz web básica utilizando Flask para interactuar con el usuario.
8. Temporalización (Diagrama de Gantt).
Semana 1-2: Investigación y análisis de requisitos.
Semana 3-4: Desarrollo de la infraestructura básica (conexión a bases de datos, configuración del entorno).
Semana 5-7: Implementación del procesamiento de lenguaje natural (entrenamiento de modelos, pruebas).
Semana 8-9: Integración del sistema de generación de consultas SQL a partir de lenguaje natural.
Semana 10-11: Desarrollo de la interfaz de usuario.
Semana 12: Pruebas y ajuste final del sistema.
Semana 13: Preparación de documentación y presentación final.

9. Viabilidad presupuestaria.
a. Nº de sesiones de trabajo: Aproximadamente 20 sesiones de trabajo de 2-3 horas cada una.
b. Gastos de producción estimados:

Software: El proyecto utilizará principalmente herramientas open-source, por lo que los gastos serán mínimos en cuanto a licencias.
Hardware: El proyecto no requiere hardware especializado, aunque se necesitará un equipo de trabajo con capacidades para procesamiento de datos (por ejemplo, un ordenador con buena CPU).
c. Alquiler y/o amortización equipo de trabajo/herramientas:
Suponiendo que ya se cuenta con un equipo adecuado, se estima un costo mensual de amortización de unos 50€ por el uso del hardware y software en función del tiempo que se utilice (aproximadamente 3 meses).
Servicios web: Si se utiliza algún servicio cloud para el entrenamiento o la ejecución de modelos avanzados (como Hugging Face), el costo puede variar, pero podría ser de unos 20-30€/mes dependiendo del uso.




NATURALEZA DEL PROYECTO
La aplicación a desarrollar será de uso profesional para las empresas de
hostelería, con esta herramienta podrán conocer los costos asociados a sus
productos y establecer márgenes de ganancias y precios.

DEFINICIÓN
Se realizará una aplicación web que permite registrar y gestionar los
costos asociados al restaurante, incluyendo los gastos relacionados con
materias primas y productos. Para ello, se empleará Spring Boot para el
desarrollo del backend y Angular para el frontend. El propósito fundamental de
este proyecto es proporcionar a los propietarios y administradores del sector
hostelero una herramienta integral que les permita visualizar de manera clara y
organizada los costos asociados al restaurante, facilitando así la toma de
decisiones estratégicas.

ANTECEDENTES
En cuanto a antecedentes, personalmente no tengo conocimiento sobre
proyectos previos que hayan desarrollado una aplicación similar a esta.

REFERENTES
Mi proyecto ha sido influenciado por una herramienta desarrollada en
Excel que se destaca por su utilidad en el cálculo preciso de los costos
asociados al funcionamiento de un restaurante. Esta herramienta abarca
diversos aspectos, incluyendo el análisis de materias primas, la mano de obra,
así como los costos directos e indirectos. Además, ofrece funcionalidades para
el cálculo de precios, facilitando la gestión financiera del negocio. La elección
de esta referencia se fundamenta en su enfoque integral y su capacidad para
abordar aspectos cruciales de la gestión restaurantera, lo cual busca replicar
nuestro proyecto.

ASPECTOS TÉCNICOS
En la fase de desarrollo se utilizará
 Backend
- Servicio API Rest que gestiona las solicitudes y respuestas
realizadas por el cliente.
- Spring Boot: Utilizado como el framework principal para el
desarrollo del backend, proporcionando una estructura
sólida y eficiente.
- Java 17: Lenguaje de programación utilizado para la
implementación de la lógica de negocio y la interacción
con la base de datos.
- Lombok: Herramienta que simplifica y agiliza el desarrollo al
reducir la cantidad de código boilerplate.
- Spring Security: Utilizado para la gestión de la seguridad
y la autenticación dentro de la aplicación.
- PostgreSQL: Sistema de gestión de bases de datos
relacional, seleccionado por su robustez y escalabilidad.

 Frontend
- Angular: Framework utilizado para la creación del frontend
de la aplicación web, ofreciendo una estructura modular y
mantenible.
- PrimeNG: Biblioteca de componentes de interfaz de usuario
basada en Angular, que proporciona una amplia gama de
componentes predefinidos y personalizables.

- Despliegue
- Docker: Utilizado para la creación, implementación y
ejecución de contenedores que encapsulan la
aplicación y sus dependencias, garantizando un
despliegue consistente y portátil.
- Heroku: Plataforma en la nube utilizada para el
despliegue y la puesta en producción de la aplicación,
ofreciendo escalabilidad y facilidad de gestión.







Naturaleza del proyecto (personal o encargo profesional) y Área de desarrollo a la que se adscribe.

4. Definición. Se trata de una breve descripción, 10 líneas máximo, en la que se explique QUÉ se va a hacer (concretando el compromiso de producción), A QUIÉN va dirigido el proyecto, CÓMO se realizará y PARA QUÉ (qué finalidad o materialización tendrá).

5. Selección 1-2 antecedentes + conclusiones. Quién ha hecho antes algo relacionado o semejante al proyecto que se presenta, dentro de la misma especialidad, y qué conclusiones se extraen para el trabajo (brevemente).

6. Selección 1-2 referentes + conclusiones. Autores, trabajos,… que sirvan como inspiración para el proyecto (desde un punto de vista conceptual, técnico, estético y/o funcional). Debe existir una vinculación evidente entre los referentes y el trabajo que se presenta, por eso se debe explicar qué interesa, en concreto, de cada uno de ellos.

7. Aspectos técnicos. Exposición de las herramientas, materiales y software que se utilizarán para su desarrollo (en todas sus fases).

8. Temporalización (expresada en forma de Diagrama de Gantt, etc.), con las tareas detalladas a realizar por semanas.

9. Viabilidad presupuestaria. Primera aproximación al presupuesto con el objetivo de saber si es viable económicamente. Incluirá, como mínimo:
     a. Nº de sesiones de trabajo.

     b. Gastos de producción estimados, incluyendo realización del producto final, si fuera necesario según especialidad.

     c. Alquiler y/o amortización equipo de trabajo/herramientas (hardware, software, servicios web). Se calcula dividiendo el coste total del equipo por la vida útil (estimada) y multiplicando el resultado por los días de uso que necesites para realizar el proyecto.

